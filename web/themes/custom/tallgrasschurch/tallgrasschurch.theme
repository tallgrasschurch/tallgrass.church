<?php

use Drupal\node\Entity\Node;
use Drupal\pathauto\PathautoState;

Node::create([
  'uid' => 1,
  'title' => 'Style Guide',
  'status' => 1,
  'type' => 'page',
  'body' => [
    'value' => 'Test page with a custom alias',
    'format' => 'full_html',
  ],
  'path' => [
    'alias' => '/style-guide',
    'pathauto' => PathautoState::SKIP,
  ],
])->save();


/**
 * template_preprocess_field
 * Prepares variables for field templates.
 *
 * @param array $variables
 */

function tallgrasschurch_preprocess_field(&$variables) {
  $element = $variables['element'];

  // Get the node
  $node = $variables['element']['#object'];

  // Video URL field
  if ($variables['field_name'] == 'field_video_url') {

    // Configure supported YouTube URLs
    $youtube_hosts = array(
      'youtube.com',
      'youtu.be'
    );

    // Configure supported Vimeo URLs
    $vimeo_hosts = array(
      'vimeo.com'
    );

    foreach ($variables['items'] as $key => $item) {

      // Get URL and parse values
      $url = $item['content']['#url']->toString();
      $url_parsed = parse_url($url);
      $url_host_array = explode('.', $url_parsed['host']);
      $url_host = (array_key_exists(count($url_host_array) - 2, $url_host_array) ? $url_host_array[count($url_host_array) - 2] : '') . '.' . $url_host_array[count($url_host_array) - 1];
      if (isset($url_parsed['query'])) {
        parse_str($url_parsed['query'], $url_query);
      }

      // Set up template variables
      if (in_array($url_host, $youtube_hosts)) {
        $variables['items'][$key]['video_embed_supported'] = true;
        $variables['items'][$key]['video_service'] = 'youtube';
        $variables['items'][$key]['video_id'] = $url_query['v'];
      } elseif (in_array($url_host, $vimeo_hosts)) {
        $variables['items'][$key]['video_embed_supported'] = true;
        $variables['items'][$key]['video_service'] = 'vimeo';
        $variables['items'][$key]['video_id'] = str_replace('/', '', $url_parsed['path']);
      } else {
        $variables['items'][$key]['video_embed_supported'] = false;
        $variables['items'][$key]['video_service'] = 'unknown';
      }
    }
  }
}



/**
 * hook_theme_suggestions_HOOK_alter
 * Alters named suggestions for a specific theme hook.
 *
 * @param array $suggestions
 * @param array $variables
 */

function tallgrasschurch_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if ($node = Drupal::routeMatch()->getParameter('node')) {
    $content_type = $node->bundle();
    $suggestions[] = 'page__'.$content_type;

    // for "page" content type only
    // if ($content_type == 'page'){
    if (in_array($content_type, array('webform','page'))) {
      $current_path = Drupal::service('path.current')->getPath();
      $alias = Drupal::service('path.alias_manager')->getAliasByPath($current_path);

      if ($alias != '')  {
        // break up the alias "/about/us"  => "", "about", "" ,"us"
        $parts = explode('/', $alias);

        // we only start suggestion with one "-" because first "/" will become extra "-"
        $suggestion = 'page__alias';

        foreach ($parts as $part) {
          // subsequent suggestions get appended
          $suggestion .= "_" . "$part";
        }

        // turn "-" in "_"
        $suggestion = str_replace("-", "_", $suggestion);
        $suggestions[] = $suggestion;
      }
    }
  }
}

function tallgrasschurch_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  if ($node = Drupal::routeMatch()->getParameter('node')) {
    $content_type = $node->bundle();
    $suggestions[] = 'node__'.$content_type;

    // for "page" content type only
    // if ($content_type == 'page'){
    if (in_array($content_type, array('webform','page'))) {
      $current_path = Drupal::service('path.current')->getPath();
      $alias = Drupal::service('path.alias_manager')->getAliasByPath($current_path);

      if ($alias != '')  {
        // break up the alias "/about/us"  => "", "about", "" ,"us"
        $parts = explode('/', $alias);

        // we only start suggestion with one "-" because first "/" will become extra "-"
        $suggestion = 'node__alias';

        foreach ($parts as $part) {
          // subsequent suggestions get appended
          $suggestion .= "_" . "$part";
        }

        // turn "-" in "_"
        $suggestion = str_replace("-", "_", $suggestion);
        $suggestions[] = $suggestion;
      }
    }
  }
}
